name: Process Region Selection

on:
  issues:
    types: [opened, edited]

# Add permissions to allow writing to issues
permissions:
  issues: write

jobs:
  process-region:
    runs-on: ubuntu-latest
    # Only run this workflow for issues created from the deployment-region template
    if: contains(github.event.issue.title, 'Deployment Request')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Extract Region Selection
        id: extract-region
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const body = issue.body;
            
            // Extract the region selection from the issue body
            // Form-based issue templates use this format: "### Region\n\nEast US"
            const regionMatch = body.match(/### Region\s*\n\s*\n\s*([^\n]+)/);
            if (!regionMatch) {
              core.setFailed('Could not find region selection in issue');
              return;
            }
            
            const selectedRegion = regionMatch[1].trim();
            console.log(`Selected Region: ${selectedRegion}`);
            
            // Set outputs for use in later steps
            core.setOutput('region', selectedRegion);

      - name: Validate Region
        id: validate-region
        run: |
          REGION="${{ steps.extract-region.outputs.region }}"
          echo "region $REGION is valid"
          echo "validation_result=region $REGION is valid" >> $GITHUB_OUTPUT

      - name: Update Issue with Result
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const validationResult = process.env.VALIDATION_RESULT;
            const issueNumber = context.payload.issue.number;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `âœ… Validation Result: ${validationResult}`
            });
        env:
          VALIDATION_RESULT: ${{ steps.validate-region.outputs.validation_result }}
