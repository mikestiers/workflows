# Get Azure Resource Groups Workflow

name: Get Azure Resource Groups

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get-resource-groups:
    name: Get Azure Resource Groups
    runs-on: ubuntu-latest
    outputs:
      resource-group-count: ${{ steps.get-rgs.outputs.resource-group-count }}
    
    steps:
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Azure Resource Groups
        id: get-rgs        
        shell: bash
        run: |
          echo "🔍 Getting Azure resource groups..."
          
          # Get resource groups with only name and location using Azure CLI query
          RESOURCE_GROUPS_JSON=$(az group list --query "[].{name:name,location:location}" --output json 2>/dev/null || echo "[]")
          
          # Get count of resource groups directly from Azure CLI
          RG_COUNT=$(az group list --query "length(@)" --output tsv 2>/dev/null || echo "0")
          
          echo "📊 Found $RG_COUNT resource group(s)"
          
          # Output filtered JSON format
          echo "📋 Resource Groups (name and location only):"
          echo "$RESOURCE_GROUPS_JSON"
          
          # Set outputs for use in other jobs or API queries
          echo "resource-group-count=$RG_COUNT" >> $GITHUB_OUTPUT
          
          # Add resource group data to workflow summary
          echo "## 📊 Azure Resource Groups" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          echo "$RESOURCE_GROUPS_JSON" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY